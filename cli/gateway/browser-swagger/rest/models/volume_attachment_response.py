# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rest.models.base_model_ import Model
from rest.models.reference import Reference
from rest import util

from rest.models.reference import Reference  # noqa: E501

class VolumeAttachmentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host=None, mount_path=None, format=None, device=None, do_not_format=None):  # noqa: E501
        """VolumeAttachmentResponse - a model defined in OpenAPI

        :param host: The host of this VolumeAttachmentResponse.  # noqa: E501
        :type host: Reference
        :param mount_path: The mount_path of this VolumeAttachmentResponse.  # noqa: E501
        :type mount_path: str
        :param format: The format of this VolumeAttachmentResponse.  # noqa: E501
        :type format: str
        :param device: The device of this VolumeAttachmentResponse.  # noqa: E501
        :type device: str
        :param do_not_format: The do_not_format of this VolumeAttachmentResponse.  # noqa: E501
        :type do_not_format: bool
        """
        self.openapi_types = {
            'host': Reference,
            'mount_path': str,
            'format': str,
            'device': str,
            'do_not_format': bool
        }

        self.attribute_map = {
            'host': 'host',
            'mount_path': 'mountPath',
            'format': 'format',
            'device': 'device',
            'do_not_format': 'doNotFormat'
        }

        self._host = host
        self._mount_path = mount_path
        self._format = format
        self._device = device
        self._do_not_format = do_not_format

    @classmethod
    def from_dict(cls, dikt) -> 'VolumeAttachmentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VolumeAttachmentResponse of this VolumeAttachmentResponse.  # noqa: E501
        :rtype: VolumeAttachmentResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host(self):
        """Gets the host of this VolumeAttachmentResponse.


        :return: The host of this VolumeAttachmentResponse.
        :rtype: Reference
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this VolumeAttachmentResponse.


        :param host: The host of this VolumeAttachmentResponse.
        :type host: Reference
        """

        self._host = host

    @property
    def mount_path(self):
        """Gets the mount_path of this VolumeAttachmentResponse.


        :return: The mount_path of this VolumeAttachmentResponse.
        :rtype: str
        """
        return self._mount_path

    @mount_path.setter
    def mount_path(self, mount_path):
        """Sets the mount_path of this VolumeAttachmentResponse.


        :param mount_path: The mount_path of this VolumeAttachmentResponse.
        :type mount_path: str
        """

        self._mount_path = mount_path

    @property
    def format(self):
        """Gets the format of this VolumeAttachmentResponse.


        :return: The format of this VolumeAttachmentResponse.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this VolumeAttachmentResponse.


        :param format: The format of this VolumeAttachmentResponse.
        :type format: str
        """

        self._format = format

    @property
    def device(self):
        """Gets the device of this VolumeAttachmentResponse.


        :return: The device of this VolumeAttachmentResponse.
        :rtype: str
        """
        return self._device

    @device.setter
    def device(self, device):
        """Sets the device of this VolumeAttachmentResponse.


        :param device: The device of this VolumeAttachmentResponse.
        :type device: str
        """

        self._device = device

    @property
    def do_not_format(self):
        """Gets the do_not_format of this VolumeAttachmentResponse.


        :return: The do_not_format of this VolumeAttachmentResponse.
        :rtype: bool
        """
        return self._do_not_format

    @do_not_format.setter
    def do_not_format(self, do_not_format):
        """Sets the do_not_format of this VolumeAttachmentResponse.


        :param do_not_format: The do_not_format of this VolumeAttachmentResponse.
        :type do_not_format: bool
        """

        self._do_not_format = do_not_format
