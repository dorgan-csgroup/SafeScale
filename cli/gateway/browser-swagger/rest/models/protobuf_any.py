# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rest.models.base_model_ import Model
import re
from rest import util

import re  # noqa: E501

class ProtobufAny(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type_url=None, value=None):  # noqa: E501
        """ProtobufAny - a model defined in OpenAPI

        :param type_url: The type_url of this ProtobufAny.  # noqa: E501
        :type type_url: str
        :param value: The value of this ProtobufAny.  # noqa: E501
        :type value: bytearray
        """
        self.openapi_types = {
            'type_url': str,
            'value': bytearray
        }

        self.attribute_map = {
            'type_url': 'typeUrl',
            'value': 'value'
        }

        self._type_url = type_url
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'ProtobufAny':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The protobufAny of this ProtobufAny.  # noqa: E501
        :rtype: ProtobufAny
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type_url(self):
        """Gets the type_url of this ProtobufAny.


        :return: The type_url of this ProtobufAny.
        :rtype: str
        """
        return self._type_url

    @type_url.setter
    def type_url(self, type_url):
        """Sets the type_url of this ProtobufAny.


        :param type_url: The type_url of this ProtobufAny.
        :type type_url: str
        """

        self._type_url = type_url

    @property
    def value(self):
        """Gets the value of this ProtobufAny.


        :return: The value of this ProtobufAny.
        :rtype: bytearray
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ProtobufAny.


        :param value: The value of this ProtobufAny.
        :type value: bytearray
        """
        if value is not None and not re.search(r'^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$', value):  # noqa: E501
            raise ValueError("Invalid value for `value`, must be a follow pattern or equal to `/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/`")  # noqa: E501

        self._value = value
