# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rest.models.base_model_ import Model
from rest.models.host_sizing import HostSizing
from rest import util

from rest.models.host_sizing import HostSizing  # noqa: E501

class ClusterDefaults(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gateway_sizing=None, master_sizing=None, node_sizing=None, image=None):  # noqa: E501
        """ClusterDefaults - a model defined in OpenAPI

        :param gateway_sizing: The gateway_sizing of this ClusterDefaults.  # noqa: E501
        :type gateway_sizing: HostSizing
        :param master_sizing: The master_sizing of this ClusterDefaults.  # noqa: E501
        :type master_sizing: HostSizing
        :param node_sizing: The node_sizing of this ClusterDefaults.  # noqa: E501
        :type node_sizing: HostSizing
        :param image: The image of this ClusterDefaults.  # noqa: E501
        :type image: str
        """
        self.openapi_types = {
            'gateway_sizing': HostSizing,
            'master_sizing': HostSizing,
            'node_sizing': HostSizing,
            'image': str
        }

        self.attribute_map = {
            'gateway_sizing': 'gatewaySizing',
            'master_sizing': 'masterSizing',
            'node_sizing': 'nodeSizing',
            'image': 'Image'
        }

        self._gateway_sizing = gateway_sizing
        self._master_sizing = master_sizing
        self._node_sizing = node_sizing
        self._image = image

    @classmethod
    def from_dict(cls, dikt) -> 'ClusterDefaults':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ClusterDefaults of this ClusterDefaults.  # noqa: E501
        :rtype: ClusterDefaults
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gateway_sizing(self):
        """Gets the gateway_sizing of this ClusterDefaults.


        :return: The gateway_sizing of this ClusterDefaults.
        :rtype: HostSizing
        """
        return self._gateway_sizing

    @gateway_sizing.setter
    def gateway_sizing(self, gateway_sizing):
        """Sets the gateway_sizing of this ClusterDefaults.


        :param gateway_sizing: The gateway_sizing of this ClusterDefaults.
        :type gateway_sizing: HostSizing
        """

        self._gateway_sizing = gateway_sizing

    @property
    def master_sizing(self):
        """Gets the master_sizing of this ClusterDefaults.


        :return: The master_sizing of this ClusterDefaults.
        :rtype: HostSizing
        """
        return self._master_sizing

    @master_sizing.setter
    def master_sizing(self, master_sizing):
        """Sets the master_sizing of this ClusterDefaults.


        :param master_sizing: The master_sizing of this ClusterDefaults.
        :type master_sizing: HostSizing
        """

        self._master_sizing = master_sizing

    @property
    def node_sizing(self):
        """Gets the node_sizing of this ClusterDefaults.


        :return: The node_sizing of this ClusterDefaults.
        :rtype: HostSizing
        """
        return self._node_sizing

    @node_sizing.setter
    def node_sizing(self, node_sizing):
        """Sets the node_sizing of this ClusterDefaults.


        :param node_sizing: The node_sizing of this ClusterDefaults.
        :type node_sizing: HostSizing
        """

        self._node_sizing = node_sizing

    @property
    def image(self):
        """Gets the image of this ClusterDefaults.


        :return: The image of this ClusterDefaults.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this ClusterDefaults.


        :param image: The image of this ClusterDefaults.
        :type image: str
        """

        self._image = image
