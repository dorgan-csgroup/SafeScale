# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rest.models.base_model_ import Model
from rest.models.reference import Reference
from rest import util

from rest.models.reference import Reference  # noqa: E501

class BucketMountingPoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket=None, host=None, path=None):  # noqa: E501
        """BucketMountingPoint - a model defined in OpenAPI

        :param bucket: The bucket of this BucketMountingPoint.  # noqa: E501
        :type bucket: str
        :param host: The host of this BucketMountingPoint.  # noqa: E501
        :type host: Reference
        :param path: The path of this BucketMountingPoint.  # noqa: E501
        :type path: str
        """
        self.openapi_types = {
            'bucket': str,
            'host': Reference,
            'path': str
        }

        self.attribute_map = {
            'bucket': 'bucket',
            'host': 'host',
            'path': 'path'
        }

        self._bucket = bucket
        self._host = host
        self._path = path

    @classmethod
    def from_dict(cls, dikt) -> 'BucketMountingPoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BucketMountingPoint of this BucketMountingPoint.  # noqa: E501
        :rtype: BucketMountingPoint
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket(self):
        """Gets the bucket of this BucketMountingPoint.


        :return: The bucket of this BucketMountingPoint.
        :rtype: str
        """
        return self._bucket

    @bucket.setter
    def bucket(self, bucket):
        """Sets the bucket of this BucketMountingPoint.


        :param bucket: The bucket of this BucketMountingPoint.
        :type bucket: str
        """

        self._bucket = bucket

    @property
    def host(self):
        """Gets the host of this BucketMountingPoint.


        :return: The host of this BucketMountingPoint.
        :rtype: Reference
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this BucketMountingPoint.


        :param host: The host of this BucketMountingPoint.
        :type host: Reference
        """

        self._host = host

    @property
    def path(self):
        """Gets the path of this BucketMountingPoint.


        :return: The path of this BucketMountingPoint.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this BucketMountingPoint.


        :param path: The path of this BucketMountingPoint.
        :type path: str
        """

        self._path = path
