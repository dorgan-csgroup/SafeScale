# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rest.models.base_model_ import Model
from rest.models.host_template import HostTemplate
from rest import util

from rest.models.host_template import HostTemplate  # noqa: E501

class TemplateList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, templates=None):  # noqa: E501
        """TemplateList - a model defined in OpenAPI

        :param templates: The templates of this TemplateList.  # noqa: E501
        :type templates: List[HostTemplate]
        """
        self.openapi_types = {
            'templates': List[HostTemplate]
        }

        self.attribute_map = {
            'templates': 'templates'
        }

        self._templates = templates

    @classmethod
    def from_dict(cls, dikt) -> 'TemplateList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TemplateList of this TemplateList.  # noqa: E501
        :rtype: TemplateList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def templates(self):
        """Gets the templates of this TemplateList.


        :return: The templates of this TemplateList.
        :rtype: List[HostTemplate]
        """
        return self._templates

    @templates.setter
    def templates(self, templates):
        """Sets the templates of this TemplateList.


        :param templates: The templates of this TemplateList.
        :type templates: List[HostTemplate]
        """

        self._templates = templates
