# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rest.models.base_model_ import Model
from rest import util


class PublicIPResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, type=None, description=None, ip_address=None, mac_address=None):  # noqa: E501
        """PublicIPResponse - a model defined in OpenAPI

        :param id: The id of this PublicIPResponse.  # noqa: E501
        :type id: str
        :param name: The name of this PublicIPResponse.  # noqa: E501
        :type name: str
        :param type: The type of this PublicIPResponse.  # noqa: E501
        :type type: str
        :param description: The description of this PublicIPResponse.  # noqa: E501
        :type description: str
        :param ip_address: The ip_address of this PublicIPResponse.  # noqa: E501
        :type ip_address: str
        :param mac_address: The mac_address of this PublicIPResponse.  # noqa: E501
        :type mac_address: str
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'type': str,
            'description': str,
            'ip_address': str,
            'mac_address': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'type': 'type',
            'description': 'description',
            'ip_address': 'ipAddress',
            'mac_address': 'macAddress'
        }

        self._id = id
        self._name = name
        self._type = type
        self._description = description
        self._ip_address = ip_address
        self._mac_address = mac_address

    @classmethod
    def from_dict(cls, dikt) -> 'PublicIPResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PublicIPResponse of this PublicIPResponse.  # noqa: E501
        :rtype: PublicIPResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this PublicIPResponse.


        :return: The id of this PublicIPResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PublicIPResponse.


        :param id: The id of this PublicIPResponse.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this PublicIPResponse.


        :return: The name of this PublicIPResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PublicIPResponse.


        :param name: The name of this PublicIPResponse.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this PublicIPResponse.


        :return: The type of this PublicIPResponse.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PublicIPResponse.


        :param type: The type of this PublicIPResponse.
        :type type: str
        """

        self._type = type

    @property
    def description(self):
        """Gets the description of this PublicIPResponse.


        :return: The description of this PublicIPResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PublicIPResponse.


        :param description: The description of this PublicIPResponse.
        :type description: str
        """

        self._description = description

    @property
    def ip_address(self):
        """Gets the ip_address of this PublicIPResponse.


        :return: The ip_address of this PublicIPResponse.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this PublicIPResponse.


        :param ip_address: The ip_address of this PublicIPResponse.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def mac_address(self):
        """Gets the mac_address of this PublicIPResponse.


        :return: The mac_address of this PublicIPResponse.
        :rtype: str
        """
        return self._mac_address

    @mac_address.setter
    def mac_address(self, mac_address):
        """Sets the mac_address of this PublicIPResponse.


        :param mac_address: The mac_address of this PublicIPResponse.
        :type mac_address: str
        """

        self._mac_address = mac_address
